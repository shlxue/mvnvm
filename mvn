#!/usr/bin/env bash

declare -r default_mvn_version=3.0.5
declare -r default_mvn_uri=www.us.apache.org/dist
declare -r default_local_dir=${HOME}/.mvnvm
declare mvn_version mvn_arguments mvn_uri download_url download_file local_dir

echoerr () { [[ -z $quiet ]] && echo "[MVNVM]" "$@" >&2; }
debug()    { [[ -n $debug ]] && echoerr "$@"; }

# process properties for output settings
for arg in "$@"; do
  case $arg in
    -q|--quiet) quiet=true ;;
    -d|--debug) debug=true ;;
    -v|--verbose) verbose=true ;;
    *) ;;
  esac
done

addMvnArgument() {
  debug "add mvn_argument: $1"
  mvn_arguments=( "${mvn_arguments[@]}" "$1" )
}

process_user_defaults()
{
  if [[ -f ~/.mvnvm.properties ]]; then
    . ~/.mvnvm.properties
  fi
}

process_project()
{
  if [[ -f mvnvm.properties ]]; then
    . mvnvm.properties
  fi
}

process_arguments() 
{
  while [[ $# -gt 0 ]]; do
    case "$1" in
      --apache-mirror) mvn_uri="$2" && shift 2 && debug "set mvn_uri: ${mvn_uri}" ;;
      --mvn-version) mvn_version="$2" && shift 2 && debug "set mvn_version: ${mvn_version}" ;;
      -d|--debug) shift ;;
      -v|--verbose) shift ;;
      -q|--quiet) shift ;;
      *) addMvnArgument "$1" && shift ;;
    esac
  done
}

process_defaults()
{
  mvn_version=${default_mvn_version}
  mvn_uri=${default_mvn_uri}
  local_dir=${default_local_dir}
}

make_url()
{
  uri="$1"
  version="$2"
  version_regex="([0-9]+)" 
  [[ $version =~ ${version_regex} ]]
  major="${BASH_REMATCH[1]}"
  download_file="apache-maven-${version}-bin.zip"
  download_url="http://${uri}/maven/maven-${major}/${version}/binaries/${download_file}"
  archive_download_url="https://archive.apache.org/dist/maven/binaries/${download_file}"
}

execRunner () {
  export MVN_HOME="${local_dir}/apache-maven-${mvn_version}"
  export M2_HOME="${MVN_HOME}"
  export MVN_OPT=""
  { "$@"; }
}

prepareDirectories() {
  if [[ ! -d "${local_dir}" ]]; then
    mkdir -p "${local_dir}"
  fi
}

downloadMaven() {
  if [[ ! -f "${local_dir}/${download_file}" ]]; then
    echoerr "downloading: ${download_url}"
    echoerr "         to: ${local_dir}/${download_file}"
  
    if which curl >/dev/null; then
      curl --silent --fail "${download_url}" --output "${local_dir}/${download_file}" || {
        echoerr "Falling back to archive: ${archive_download_url}"
        curl --silent --fail "${archive_download_url}" --output "${local_dir}/${download_file}"
      }
    elif which wget >/dev/null; then
      wget --quiet -P "${local_dir}" "${download_url}" || {
        echoerr "Falling back to archive: ${archive_download_url}"
        wget --quiet -P "${local_dir}" "${archive_download_url}"
      }
    fi
  fi
}

unzipMaven() {
  if [[ ! -d "${local_dir}/apache-maven-${version}" ]]; then
    echoerr " extracting: ${local_dir}/apache-maven-${version}"
    unzip -o -qq -d "${local_dir}" "${local_dir}/${download_file}"
  fi
}

process_defaults
process_project
process_user_defaults
process_arguments "$@"
make_url "${mvn_uri}" "${mvn_version}"
debug "maven version: ${mvn_version}"
prepareDirectories
downloadMaven
unzipMaven

execRunner "${local_dir}/apache-maven-${version}/bin/mvn" "${mvn_arguments[@]}"

